.build:
  image: node:10.16.0-stretch
  cache:
    paths:
      - .npm/
  before_script:
    - cp $NPM_RC ~/.npmrc
    - npm ci --cache .npm --prefer-offline
  script:
    - npm install
    - npm run build:$ENV
  artifacts:
    paths:
      - dist/

.deploy-image:
  image: docker:19.03.13
  services:
    - docker:19.03.13-dind
  before_script:
    - cat $GCLOUD_SERVICE_KEY | docker login -u _json_key --password-stdin https://$GCR_HOST
  script:
    - docker build . -t $GCR_HOST/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $GCR_HOST/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_COMMIT_TAG
.deploy-chart:
  image: alpine/k8s:1.21.2
  script:
    - helm repo add chartmuseum $CHARTMUSEUM_URL
    - helm package $CHART_DIR --app-version $CI_COMMIT_TAG --version $CI_COMMIT_TAG
    - helm push $CHART_NAME-$CI_COMMIT_TAG.tgz chartmuseum
.rollout:
  image: profyu/gcloud-sdk:285.0.1
  before_script:
    - export PATH=/google-cloud-sdk/bin/:$PATH
    - gcloud auth activate-service-account --key-file $GCLOUD_SERVICE_KEY
    - gcloud container clusters get-credentials $GCLOUD_KUBE_CLUSTER_NAME -z $GCLOUD_KUBE_ZONE --project $GCLOUD_PROJECT_ID
  script:
    - helm repo add chartmuseum $CHARTMUSEUM_URL
    - helm upgrade --install -n $KUBE_DEPLOY_NS --version $CI_COMMIT_TAG --set ingress.hosts[0].host=$INGRESS_HOST --set ingress.hosts[0].paths[0]="$INGRESS_PATH" --set ingress.tls[0].hosts[0]=$INGRESS_HOST --set ingress.tls[0].secretName=$INGRESS_TLS_NAME $RELEASE_NAME chartmuseum/$CHART_NAME
stages:
  - validate
  - build
  - test
  - deploy-image
  - deploy-chart
  - rollout
image: docker:19.03.13
variables:
  IMAGE_NAME: unblock-ui
  CHART_NAME: unblock-ui
  CHART_DIR: ./chart/unblock-ui
  RELEASE_NAME: unblock-ui
  INGRESS_TLS_NAME: unblock-ui-tls
  INGRESS_PATH: /
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
services:
  - docker:19.03.13-dind
build-dev:
  extends: .build
  stage: build
  variables:
    ENV: dev
  only:
    refs:
      - /^\d+\.\d+\.\d+-beta$/@ucp/unblock-ui
build-staging:
  extends: .build
  stage: build
  variables:
    ENV: staging
  only:
    refs:
      - /^\d+\.\d+\.\d+-ga$/@ucp/unblock-ui
build-prod:
  extends: .build
  stage: build
  variables:
    ENV: prod
  only:
    refs:
      - /^\d+\.\d+\.\d+$/@ucp/unblock-ui
deploy-image:
  extends: .deploy-image
  stage: deploy-image
  only:
    refs:
      - /^\d+\.\d+\.\d+(-(beta|ga))?$/@ucp/unblock-ui
  dependencies:
    - build-dev
    - build-staging
    - build-prod
deploy-chart:
  extends: .deploy-chart
  stage: deploy-chart
  only:
    refs:
      - /^\d+\.\d+\.\d+(-(beta|ga))?$/@ucp/unblock-ui
rollout-dev:
  extends: .rollout
  stage: rollout
  variables:
    KUBE_DEPLOY_NS: unblock-dev
    INGRESS_HOST: ucp.dev.unblock-analysis.com
  only:
    refs:
      - /^\d+\.\d+\.\d+-beta$/@ucp/unblock-ui
rollout-staging:
  extends: .rollout
  stage: rollout
  variables:
    KUBE_DEPLOY_NS: unblock-staging
    INGRESS_HOST: ucp.staging.unblock-analysis.com
  only:
    refs:
      - /^\d+\.\d+\.\d+-ga$/@ucp/unblock-ui
rollout-prod:
  extends: .rollout
  stage: rollout
  variables:
    KUBE_DEPLOY_NS: unblock-prod
    INGRESS_HOST: ucp.unblock-analysis.com
  only:
    refs:
      - /^\d+\.\d+\.\d+$/@ucp/unblock-ui
